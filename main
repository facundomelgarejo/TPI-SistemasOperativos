#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>

typedef struct {
    int idproc;
    int T_proc;
    int TA;
    int TI;
} proc;

typedef struct {
    int idpart;
    int *dirinicio;
    int T_part;
    proc *proc; //Colocamos un puntero al proceso que fue asignado a la partición
    int idproc;
    int fragmentacion;
} particion;


//Para poder visualizar el trabajo vamos a generar 3 particiones, sin embargo podrían generarse más.
/*  
    Particion 1 = 250 B
    Particion 2 = 300 B
    Particion 3 = 150 B
*/
//Además solo permitiremos cargar un máximo de 5 procesos.


int main(void){
// DEFINIMOS EL NÚMERO N, que será la cantidad máxima de procesos admitidos.
    int N=5;
    int i;

// -------------- Creación de Particiones ---------------------

//Creamos las particiones    
    particion part1, part2, part3;
//Particion 1
    part1.idpart=1;
    part1.T_part=250;
    part1.dirinicio=malloc(part1.T_part);
    part1.fragmentacion=0;
    part1.idproc=0; //Inicialmente no hay procesos cargados, por lo que el id de proceso es 0
    part1.proc=NULL; //Inicialmente no hay procesos cargados, por lo que apunta a NULL
//Particion 2
    part2.idpart=2;
    part2.T_part=300;
    part2.dirinicio=malloc(part2.T_part);
    part2.fragmentacion=0;
    part2.idproc=0;
    part2.proc=NULL;
//Particion 3
    part3.idpart=3;
    part3.T_part=150;
    part3.dirinicio=malloc(part3.T_part);
    part3.fragmentacion=0;
    part3.idproc=0;
    part3.proc=NULL;
//Arreglo de particiones
    particion parts[3]={part1, part2, part3};

//-------------- Creación de Procesos ---------------------
    int bandera,contador;
    bandera=1;
    contador=0;
    fflush(stdin);
    proc vacio;
    vacio.idproc=0;
    vacio.T_proc=0;
    vacio.TA=0;
    vacio.TI=0;
    proc procesos[100];
    while (bandera==1)
    {
        char T_proc[5], sTA[5], sTI[5];
        int TA, TI;
        proc aux;
        aux.idproc=contador+1;
        printf("Ingrese el tamaño del proceso: ");
        fflush(stdin);
        scanf("%s",T_proc);
        aux.T_proc=atoi(T_proc);
        printf("Ingrese el tiempo de arribo del proceso: ");
        fflush(stdin);
        scanf("%s",sTA);
        TA=atoi(sTA);aux.TA=TA; // printf('%d \n',TA);
        printf("Ingrese el tiempo de irrupción del proceso: ");
        fflush(stdin);
        scanf("%s",sTI);
        TI=atoi(sTI);aux.TI=TI; // printf('%d \n
